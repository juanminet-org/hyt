name: ci

on:
  push:
    branches:
      - main

jobs:
  build_backend:
    name: Build and test Backend Maven
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
          cache-dependency-path: ./backend/pom.xml

      - name: Build, test, and extract backend
        run: |
          mvn -f ./backend/pom.xml clean install -DskipTests
          mkdir -p backend/target/extracted
          java -Djarmode=tools -jar backend/target/*.jar extract --layers --launcher --destination backend/target/extracted
          # Ensure snapshot-dependencies directory is uploaded even if empty
          if [ ! "$(ls -A backend/target/extracted/snapshot-dependencies)" ]; then
            echo "placeholder" > backend/target/extracted/snapshot-dependencies/placeholder
          fi

      - name: Upload backend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-artifacts
          path: backend/target/extracted

  build_frontend:
    name: Build and test frontend npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Upload frontend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-artifacts
          path: ./frontend/build

  push_backend_docker_registry:
    name: Push backend docker image
    needs: build_backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Download backend artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-artifacts
          path: backend/target/extracted

      - name: List backend artifacts
        run: ls -l backend/target/extracted

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Remove placeholder file if present
        run: |
          rm -f backend/target/extracted/snapshot-dependencies/placeholder

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/backend:latest
          target: prod

  push_frontend_docker_registry:
    name: Push frontend Docker image
    needs: build_frontend
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Download frontend artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-artifacts
          path: frontend/build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/frontend:latest
          target: prod
