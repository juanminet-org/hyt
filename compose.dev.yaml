# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
name: hyt-poc-dev
services:
  hyt-poc-java-dev-app:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    ports:
      - 8080:8080
      - 8000:8000
    develop:
      watch:
        - action: rebuild
          path: .
    depends_on:
      hyt-poc-dev-db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://hyt-poc-dev-db:5432/hyt-poc-dev-db
      - SPRING_DATASOURCE_USERNAME=hyt-poc-user
      - SPRING_DATASOURCE_PASSWORD=hyt-poc-password
  hyt-poc-react-app:
    container_name: hyt-poc-react-dev-app
    build:
      context: ./frontend
      target: dev
    ports:
      - 3000:3000
      - 9229:9229
    environment:
      - NODE_ENV=development
    volumes:
      - ./src:/usr/src/app/src
  hyt-poc-dev-db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=hyt-poc-dev-db
      - POSTGRES_USER=hyt-poc-user
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "hyt-poc-db" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt

